//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics.Contracts;
using System.CodeDom.Compiler;

namespace LibraryNET.Core
{
	[GeneratedCode("T4CodeGenerator", "1.0.0.0")] 
    public static class FunctionCurryingTransformExtensions
    {
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, TResult>> Currying<T1, T2,  TResult>(this Func<T1, T2,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, TResult>>>() != null);

            return x1 => x2 => func(x1, x2);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, TResult>>> Currying<T1, T2, T3,  TResult>(this Func<T1, T2, T3,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, TResult>>>>() != null);

            return x1 => x2 => x3 => func(x1, x2, x3);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, TResult>>>> Currying<T1, T2, T3, T4,  TResult>(this Func<T1, T2, T3, T4,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, TResult>>>>>() != null);

            return x1 => x2 => x3 => x4 => func(x1, x2, x3, x4);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, TResult>>>>> Currying<T1, T2, T3, T4, T5,  TResult>(this Func<T1, T2, T3, T4, T5,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, TResult>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => func(x1, x2, x3, x4, x5);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, TResult>>>>>> Currying<T1, T2, T3, T4, T5, T6,  TResult>(this Func<T1, T2, T3, T4, T5, T6,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, TResult>>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => x6 => func(x1, x2, x3, x4, x5, x6);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, TResult>>>>>>> Currying<T1, T2, T3, T4, T5, T6, T7,  TResult>(this Func<T1, T2, T3, T4, T5, T6, T7,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, TResult>>>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => x6 => x7 => func(x1, x2, x3, x4, x5, x6, x7);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, TResult>>>>>>>> Currying<T1, T2, T3, T4, T5, T6, T7, T8,  TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, TResult>>>>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => func(x1, x2, x3, x4, x5, x6, x7, x8);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, Func<T9, TResult>>>>>>>>> Currying<T1, T2, T3, T4, T5, T6, T7, T8, T9,  TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, Func<T9, TResult>>>>>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => func(x1, x2, x3, x4, x5, x6, x7, x8, x9);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, Func<T9, Func<T10, TResult>>>>>>>>>> Currying<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10,  TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10,  TResult> func)
        {
		    Contract.Requires<ArgumentNullException>(func != null);
            Contract.Ensures(Contract.Result<Func<T1, Func<T2, Func<T3, Func<T4, Func<T5, Func<T6, Func<T7, Func<T8, Func<T9, Func<T10, TResult>>>>>>>>>>>() != null);

            return x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => func(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);
        }

	}

}