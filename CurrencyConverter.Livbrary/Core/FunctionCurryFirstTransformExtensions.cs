//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics.Contracts;
using System.CodeDom.Compiler;

namespace CurrencyConverter.Library.Core
{
    [GeneratedCode("T4CodeGenerator", "1.0.0.0")] 
    public static class FunctionCurryFirstTransformExtensions
    {
	    [Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<TResult> CurryFirst<T1,TResult>(this Func<T1, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<TResult>>() != null);

            return () => selector(value);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, TResult> CurryFirst<T1, T2, TResult>(this Func<T1, T2, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, TResult>>() != null);

            return (x2) => selector(value, x2);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, TResult> CurryFirst<T1, T2, T3, TResult>(this Func<T1, T2, T3, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, TResult>>() != null);

            return (x2, x3) => selector(value, x2, x3);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, TResult> CurryFirst<T1, T2, T3, T4, TResult>(this Func<T1, T2, T3, T4, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, TResult>>() != null);

            return (x2, x3, x4) => selector(value, x2, x3, x4);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, TResult> CurryFirst<T1, T2, T3, T4, T5, TResult>(this Func<T1, T2, T3, T4, T5, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, TResult>>() != null);

            return (x2, x3, x4, x5) => selector(value, x2, x3, x4, x5);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, TResult>(this Func<T1, T2, T3, T4, T5, T6, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, TResult>>() != null);

            return (x2, x3, x4, x5, x6) => selector(value, x2, x3, x4, x5, x6);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, T7, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7) => selector(value, x2, x3, x4, x5, x6, x7);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8) => selector(value, x2, x3, x4, x5, x6, x7, x8);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9, x10) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9, x10);
        }

		[Obsolete("préférer l'utilisation de Curry dans le Namespace Transform", false)]
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> CurryFirst<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11);
        }

		

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, TResult> CurryLast<T1, T2, TResult>(this Func<T1, T2, TResult> selector, T2 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, TResult>>() != null);

            return (x1) => selector(x1, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, TResult> CurryLast<T1, T2, T3, TResult>(this Func<T1, T2, T3, TResult> selector, T3 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, TResult>>() != null);

            return (x1, x2) => selector(x1, x2, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, TResult> CurryLast<T1, T2, T3, T4, TResult>(this Func<T1, T2, T3, T4, TResult> selector, T4 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, TResult>>() != null);

            return (x1, x2, x3) => selector(x1, x2, x3, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, TResult> CurryLast<T1, T2, T3, T4, T5, TResult>(this Func<T1, T2, T3, T4, T5, TResult> selector, T5 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, TResult>>() != null);

            return (x1, x2, x3, x4) => selector(x1, x2, x3, x4, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, TResult> CurryLast<T1, T2, T3, T4, T5, T6, TResult>(this Func<T1, T2, T3, T4, T5, T6, TResult> selector, T6 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, TResult>>() != null);

            return (x1, x2, x3, x4, x5) => selector(x1, x2, x3, x4, x5, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, T6, TResult> CurryLast<T1, T2, T3, T4, T5, T6, T7, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, TResult> selector, T7 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, T6, TResult>>() != null);

            return (x1, x2, x3, x4, x5, x6) => selector(x1, x2, x3, x4, x5, x6, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, T6, T7, TResult> CurryLast<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> selector, T8 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>() != null);

            return (x1, x2, x3, x4, x5, x6, x7) => selector(x1, x2, x3, x4, x5, x6, x7, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> CurryLast<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> selector, T9 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>() != null);

            return (x1, x2, x3, x4, x5, x6, x7, x8) => selector(x1, x2, x3, x4, x5, x6, x7, x8, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> CurryLast<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> selector, T10 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>() != null);

            return (x1, x2, x3, x4, x5, x6, x7, x8, x9) => selector(x1, x2, x3, x4, x5, x6, x7, x8, x9, value);
        }

		
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> CurryLast<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> selector, T11 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>() != null);

            return (x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) => selector(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, value);
        }

		
	    
	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
		[SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<TResult> Curry<T1,TResult>(this Func<T1, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<TResult>>() != null);

            return () => selector(value);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, TResult> Curry<T1, T2, TResult>(this Func<T1, T2, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, TResult>>() != null);

            return (x2) => selector(value, x2);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, TResult> Curry<T1, T2, T3, TResult>(this Func<T1, T2, T3, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, TResult>>() != null);

            return (x2, x3) => selector(value, x2, x3);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, TResult> Curry<T1, T2, T3, T4, TResult>(this Func<T1, T2, T3, T4, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, TResult>>() != null);

            return (x2, x3, x4) => selector(value, x2, x3, x4);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, TResult> Curry<T1, T2, T3, T4, T5, TResult>(this Func<T1, T2, T3, T4, T5, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, TResult>>() != null);

            return (x2, x3, x4, x5) => selector(value, x2, x3, x4, x5);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, TResult> Curry<T1, T2, T3, T4, T5, T6, TResult>(this Func<T1, T2, T3, T4, T5, T6, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, TResult>>() != null);

            return (x2, x3, x4, x5, x6) => selector(value, x2, x3, x4, x5, x6);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, TResult> Curry<T1, T2, T3, T4, T5, T6, T7, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7) => selector(value, x2, x3, x4, x5, x6, x7);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, TResult> Curry<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8) => selector(value, x2, x3, x4, x5, x6, x7, x8);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, TResult> Curry<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> Curry<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9, x10) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9, x10);
        }

	    [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")]
        [SuppressMessage("Microsoft.Design", "CA1062:Valider les arguments de méthodes publiques", Justification = "Géré par Code Contract")]
        public static Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> Curry<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(this Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> selector, T1 value)
        {
            Contract.Requires<ArgumentNullException>(selector != null);
            Contract.Ensures(Contract.Result<Func<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>() != null);

            return (x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) => selector(value, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11);
        }

		
}

}